{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "d6ba32e8",
   "metadata": {},
   "outputs": [
    {
     "ename": "ModuleNotFoundError",
     "evalue": "No module named 'streamlit'",
     "output_type": "error",
     "traceback": [
      "\u001b[31m---------------------------------------------------------------------------\u001b[39m",
      "\u001b[31mModuleNotFoundError\u001b[39m                       Traceback (most recent call last)",
      "\u001b[36mCell\u001b[39m\u001b[36m \u001b[39m\u001b[32mIn[1]\u001b[39m\u001b[32m, line 1\u001b[39m\n\u001b[32m----> \u001b[39m\u001b[32m1\u001b[39m \u001b[38;5;28;01mimport\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mstreamlit\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mas\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mst\u001b[39;00m\n\u001b[32m      2\u001b[39m \u001b[38;5;28;01mimport\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mpandas\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mas\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mpd\u001b[39;00m\n\u001b[32m      3\u001b[39m \u001b[38;5;28;01mimport\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mmatplotlib\u001b[39;00m\u001b[34;01m.\u001b[39;00m\u001b[34;01mpyplot\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mas\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mplt\u001b[39;00m\n",
      "\u001b[31mModuleNotFoundError\u001b[39m: No module named 'streamlit'"
     ]
    }
   ],
   "source": [
    "import streamlit as st\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "# Page title\n",
    "st.title(\"üìä Customer Churn Analysis ‚Äî Data Science & Big Data Dashboard\")\n",
    "\n",
    "# Load data\n",
    "@st.cache_data\n",
    "def load_data():\n",
    "    df = pd.read_csv(\"customer_churn_data.csv\")\n",
    "    return df\n",
    "\n",
    "df = load_data()\n",
    "\n",
    "# Data Cleaning\n",
    "df[\"InternetService\"] = df[\"InternetService\"].fillna(\"\")\n",
    "df.drop_duplicates(inplace=True)\n",
    "\n",
    "# Show raw data\n",
    "if st.checkbox(\"üîç Show Raw Data\"):\n",
    "    st.write(df.head(10))\n",
    "\n",
    "# Summary\n",
    "st.subheader(\"üìå Dataset Summary\")\n",
    "st.write(\"Shape of data:\", df.shape)\n",
    "st.write(\"Missing values:\", df.isna().sum().sum())\n",
    "st.write(\"Duplicate rows:\", df.duplicated().sum())\n",
    "st.write(\"Data Types:\")\n",
    "st.write(df.dtypes)\n",
    "\n",
    "# Descriptive statistics\n",
    "if st.checkbox(\"üìà Show Descriptive Statistics\"):\n",
    "    st.write(df.describe())\n",
    "\n",
    "# Churn Pie Chart\n",
    "st.subheader(\"üìâ Churn Distribution\")\n",
    "fig1, ax1 = plt.subplots()\n",
    "df[\"Churn\"].value_counts().plot(kind=\"pie\", autopct=\"%1.1f%%\", ax=ax1, startangle=90, colors=[\"lightgreen\", \"salmon\"])\n",
    "ax1.set_ylabel(\"\")\n",
    "st.pyplot(fig1)\n",
    "\n",
    "# Histograms\n",
    "st.subheader(\"üìä Distribution Visualizations\")\n",
    "col1, col2 = st.columns(2)\n",
    "\n",
    "with col1:\n",
    "    fig2, ax2 = plt.subplots()\n",
    "    ax2.hist(df[\"MonthlyCharges\"], bins=20, color=\"skyblue\", edgecolor=\"black\")\n",
    "    ax2.set_title(\"Monthly Charges\")\n",
    "    st.pyplot(fig2)\n",
    "\n",
    "with col2:\n",
    "    fig3, ax3 = plt.subplots()\n",
    "    ax3.hist(df[\"Tenure\"], bins=20, color=\"orange\", edgecolor=\"black\")\n",
    "    ax3.set_title(\"Tenure\")\n",
    "    st.pyplot(fig3)\n",
    "\n",
    "# Grouped Analysis\n",
    "st.subheader(\"üîç Group-wise Mean Analysis\")\n",
    "st.write(\"Average Monthly Charges by Churn:\")\n",
    "st.write(df.groupby(\"Churn\")[\"MonthlyCharges\"].mean())\n",
    "\n",
    "st.write(\"Average Monthly Charges by Churn & Gender:\")\n",
    "st.write(df.groupby([\"Churn\", \"Gender\"])[\"MonthlyCharges\"].mean())\n",
    "\n",
    "st.write(\"Average Tenure by Churn:\")\n",
    "st.write(df.groupby(\"Churn\")[\"Tenure\"].mean())\n",
    "\n",
    "if \"Age\" in df.columns:\n",
    "    st.write(\"Average Age by Churn:\")\n",
    "    st.write(df.groupby(\"Churn\")[\"Age\"].mean())\n",
    "\n",
    "# Bar chart - Contract type vs Monthly Charges\n",
    "if \"ContractType\" in df.columns:\n",
    "    st.subheader(\"üì¶ Contract Type vs Monthly Charges\")\n",
    "    fig4, ax4 = plt.subplots()\n",
    "    df.groupby(\"ContractType\")[\"MonthlyCharges\"].mean().plot(kind=\"bar\", ax=ax4, color=\"purple\")\n",
    "    ax4.set_ylabel(\"Avg Monthly Charges\")\n",
    "    ax4.set_title(\"Average Price by Contract Type\")\n",
    "    st.pyplot(fig4)\n",
    "\n",
    "# Correlation Matrix\n",
    "st.subheader(\"üîó Correlation Heatmap\")\n",
    "numeric_df = df.select_dtypes(include=[\"number\"])\n",
    "fig5, ax5 = plt.subplots(figsize=(8, 6))\n",
    "sns.heatmap(numeric_df.corr(), annot=True, cmap=\"coolwarm\", ax=ax5)\n",
    "st.pyplot(fig5)\n",
    "\n",
    "# Encoding Features\n",
    "st.subheader(\"üß† Feature Encoding\")\n",
    "if \"Gender\" in df.columns and \"Churn\" in df.columns:\n",
    "    df[\"GenderEncoded\"] = df[\"Gender\"].apply(lambda x: 1 if x == \"Female\" else 0)\n",
    "    df[\"ChurnEncoded\"] = df[\"Churn\"].apply(lambda x: 1 if x == \"Yes\" else 0)\n",
    "    st.write(df[[\"Gender\", \"GenderEncoded\", \"Churn\", \"ChurnEncoded\"]].head())\n",
    "\n",
    "# Column list\n",
    "if st.checkbox(\"üßæ Show All Columns\"):\n",
    "    st.write(df.columns.tolist())\n",
    "\n",
    "# Footer\n",
    "st.markdown(\"---\")\n",
    "st.caption(\"Built with ‚ù§Ô∏è using Streamlit | Data Science + Big Data Insights\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": None,
   "id": "6a31ba5c",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": ".venv",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.13.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
